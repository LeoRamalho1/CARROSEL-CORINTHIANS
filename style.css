/* Zerando margin, padding e aplicando box-sizing border-box em todos os elementos */
* {
    margin: 0%;
    padding: 0%;
    box-sizing: border-box;
}

/* Estilizando o body com a cor de fundo */
body {
    background-color: #e5e5e5; /* Cor de fundo da página */
}

/* Estilizando o main para organizar o layout */
main {
    display: flex; /* Usando Flexbox para alinhar os elementos dentro do main */
    flex-direction: column; /* Disposição dos elementos na vertical */
    gap: 20px; /* Espaçamento entre os elementos */
    width: 100%; /* A largura ocupa 100% da tela */
    height: 100vh; /* Altura de 100% da tela (full viewport) */
    justify-content: space-between; /* Distribui os itens para preencher a altura da tela */
}

/* Estilizando a container onde o carrossel vai ficar */
.container {
    width: 100%; /* Largura da container ocupa 100% da tela */
    height: calc(var(--height) + 50px); /* Ajustando a altura da container para incluir espaço extra */
    overflow: hidden; /* Escondendo qualquer conteúdo que ultrapasse a altura da container */
}

/* Estilizando o carrossel */
.carrosel {
    width: 100%; /* Largura do carrossel ocupa 100% da container */
    display: flex; /* Flexbox para os itens do carrossel ficarem lado a lado */
    position: relative; /* Necessário para o posicionamento absoluto dos itens dentro */
    height: 100%; /* O carrossel vai ocupar toda a altura da container */
}

/* Estilizando cada item do carrossel */
.item {
    width: var(--width); /* Largura do item conforme a variável --width */
    height: var(--width); /* Altura do item conforme a variável --width */
    width: 100px; /* Largura fixa de 100px */
    height: 50px; /* Altura fixa de 50px */
    position: absolute; /* O item vai se posicionar absolutamente dentro da container */
    left: 100%; /* Inicialmente os itens começam à direita da tela */
    animation: autoRun 10s linear infinite; /* Animação do carrossel (movimento contínuo da direita para a esquerda) */
    animation-delay: calc(10 / var(--quantity) * var(--delay)) !important; /* Atraso da animação conforme a quantidade e delay configurados */
    cursor: pointer; /* Apontando o cursor para indicar que o item é interativo */
    -webkit-filter: grayscale(100%); /* Transformando as imagens para preto e branco */
    filter: grayscale(100%); /* Transformando as imagens para preto e branco */
    transition: filter 0.3s ease; /* Transição suave de filtro para quando o mouse passar */
}

/* Estilizando os itens do carrossel reverso */
.container.reverse .item {
    animation: reverseRun 10s linear infinite; /* Animação reversa do carrossel */
    width: 200px; /* Largura maior para os itens do carrossel reverso */
    height: 100%; /* Faz os itens ocuparem toda a altura da container */
}

/* Estilizando a imagem dentro de cada item */
.item img {
    width: 100%; /* Faz a imagem ocupar toda a largura do item */
}

/* Efeito quando o mouse passa sobre os itens do carrossel */
.container:hover .item {
    animation-play-state: paused; /* Pausa a animação quando o mouse está sobre o item */
    filter: grayscale(0%); /* Restaura a cor original da imagem (sem filtro preto e branco) */
}

/* Definindo a animação de movimentação do carrossel (da direita para a esquerda) */
@keyframes autoRun {
    from {
        left: 100%; /* Começa da direita (fora da tela) */
    }
    to {
        left: -50px; /* Vai para a esquerda, até sair da tela */
    }
}

/* Definindo a animação de movimentação reversa do carrossel (da esquerda para a direita) */
@keyframes reverseRun {
    from {
        left: -200px; /* Começa da esquerda, fora da tela */
    }
    to {
        left: 100%; /* Vai para a direita, até sair da tela */
    }
}

